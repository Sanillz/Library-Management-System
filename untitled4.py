# -*- coding: utf-8 -*-
"""Untitled4.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1G1hQeKRWowL5Jhfj6bnCZGAKGvTqzsrf
"""

import datetime

class Library:
    def __init__(self):
        self.books = []
        self.borrowed_books = {}

    def add_book(self, book):
        """Adds a book to the library's collection."""
        self.books.append(book)
        print(f"Book '{book}' added successfully.")

    def view_books(self):
        """Displays all available books and borrowed books with their borrow dates."""
        print("Available Books:")
        for book in self.books:
            if book not in self.borrowed_books:
                print(book)
        print("\nBorrowed Books:")
        for book, borrow_date in self.borrowed_books.items():
            print(f"{book} - Borrowed on {borrow_date}")

def borrow_book(self, book):
        """Borrows a book from the library."""
        if book in self.books:
            borrow_date = datetime.date.today()
            self.borrowed_books[book] = borrow_date
            self.books.remove(book)
            print(f"Book '{book}' borrowed successfully. Due date: {borrow_date}")
        else:
            print(f"Book '{book}' not found in the library.")

def return_book(self, book):
        """Allows a user to return a borrowed book and calculates any penalty."""
        if book in self.borrowed_books:
            borrow_date = self.borrowed_books.pop(book)
            days_borrowed = (datetime.date.today() - borrow_date).days
            if days_borrowed > 30:
                print(f"Book '{book}' returned with a penalty for {days_borrowed - 30} days.")
            else:
                print(f"Book '{book}' returned successfully.")
        else:
            print(f"Book '{book}' was not borrowed.")

def delete_book(self, book):
        """Removes a book from the library's collection."""
        if book in self.books:
            self.books.remove(book)
            print(f"Book '{book}' deleted successfully.")
        else:
            print(f"Book '{book}' not found.")

def save_to_file(self, filename):
        """Saves the current state of the library to a file."""
        with open(filename, 'w') as file:
            for book in self.books:
                file.write(book + "\n")
            file.write("BORROWED BOOKS\n")
            for book, borrow_date in self.borrowed_books.items():
                file.write(f"{book}|{borrow_date}\n")
        print(f"Library data saved to {filename}.")

def load_from_file(self, filename):
        """Loads the state of the library from a file."""
        try:
            with open(filename, 'r') as file:
                lines = file.readlines()
                self.books = [line.strip() for line in lines if line.strip() and "BORROWED BOOKS" not in line]
                borrowed_books = [line.strip() for line in lines if "BORROWED BOOKS" in line or "|" in line]
                self.borrowed_books = {book.split("|")[0]: datetime.datetime.strptime(book.split("|")[1], "%Y-%m-%d").date() for book in borrowed_books[1:]}
            print(f"Library data loaded from {filename}.")
        except FileNotFoundError:
            print(f"File {filename} not found.")

def main():
    library = Library()
    while True:
        print("\nLibrary Management System")
        print("1. Add Book")
        print("2. View Books")
        print("3. Borrow Book")
        print("4. Return Book")
        print("5. Delete Book")
        print("6. Save to File")
        print("7. Load from File")
        print("8. Exit")
        choice = input("Enter your choice: ")
        if choice == "1":
            book = input("Enter book title: ")
            library.add_book(book)
        elif choice == "2":
            library.view_books()
        elif choice == "3":
            book = input("Enter book title: ")
            library.borrow_book(book)
        elif choice == "4":
            book = input("Enter book title: ")
            library.return_book(book)
        elif choice == "5":
            book = input("Enter book title: ")
            library.delete_book(book)
        elif choice == "6":
            filename = input("Enter filename: ")
            library.save_to_file(filename)
        elif choice == "7":
            filename = input("Enter filename: ")
            library.load_from_file(filename)
        elif choice == "8":
            break
        else:
            print("Invalid choice. Please try again.")

if __name__ == "__main__":
    main()